generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Aluno {
  nome     String
  senha    String
  email    String @db.VarChar(20)
  id_aluno Int    @id @default(autoincrement())
  estado  String    @default("ativo")
  // reserva Reserva[] @relation("alunoToreserva")
  @@map("aluno")
}

model Reserva {
  id_turma   Int
  id_aluno   Int 
  id_reserva Int @unique @default(autoincrement())
  computador    String
  consentimento Boolean
  curso         String
  @@id([id_reserva,id_aluno,id_turma])
  // aluno         Aluno      @relation("alunoToreserva", fields: [id_aluno], references: [id])
  // criarturma    CriarTurma @relation("criarturmaToreserva", fields: [id_turma], references: [id_turma])
  @@map("reserva")
}

model Professor {
  email_professor String       @unique @db.VarChar(20)
  nome            String
  senha           String
  id_professor    Int          @id @default(autoincrement())
  bloqueia        Bloqueia[]
  turma           CriarTurma[]

  @@map("professor")
}

model Laboratorio {
  id_lab                  Int                 @id @unique @default(autoincrement())
  quantidade_computadores Int
  bloqueia                Bloqueia[]
  turma                   CriarTurma[]
  proibe                  ProibeLaboratorio[]

  @@map("laboratorio")
}

model Bloqueia {
  email_professor      String      @db.VarChar(20)
  id_lab               Int
  horario_inicio       DateTime?   @db.Time(0)
  horario_fim          DateTime?   @db.Time(0)
  data_inicio_bloqueia DateTime
  data_fim_bloqueia    DateTime
  dia_semana           String      @db.VarChar(20)
  id                   Int         @unique @default(autoincrement())
  professor            Professor   @relation(fields: [email_professor], references: [email_professor])
  laboratorio          Laboratorio @relation(fields: [id_lab], references: [id_lab])

  @@map("bloqueia")
}

model CriarTurma {
  id_turma        Int         @unique
  email_professor String      @db.VarChar(20)
  id_lab          Int
  data_turma      DateTime
  curso           String      @db.VarChar(20)
  horario_inicio  DateTime
  horario_fim     DateTime
  professor       Professor   @relation(fields: [email_professor], references: [email_professor])
  laboratorio     Laboratorio @relation(fields: [id_lab], references: [id_lab])
  // reserva         Reserva[] @relation("criarturmaToreserva")
  @@map("criarturma")
}

model Administrador {
  email_adm String @unique @db.VarChar(20)
  nome_adm  String

  @@map("administrador")
}

model ProibeLaboratorio {
  data_inicio DateTime?
  data_fim    DateTime?
  id_lab      Int
  id          Int         @unique @default(autoincrement())
  laboratorio Laboratorio @relation(fields: [id_lab], references: [id_lab])

  @@map("proibelaboratorio")
}
