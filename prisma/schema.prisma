// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id    Int     @id @default(autoincrement())
  email String  @unique
  nome  String?
  @@map("usuarios")
}

model Aluno {
  email_aluno String  @db.VarChar(20) @id
  nome  String
  senha  String
  // reservas Reserva[]
  @@map("aluno")
}

model Reserva{
  email_aluno String  @db.VarChar(20) @id
  id_turma Int
  // aluno Aluno   @relation(fields: [email_aluno], references: [email_aluno])
  // turma Turma   @relation(fields: [id_turma], references: [id_turma])
  @@map("reserva")
}

model Administrador {
  email_adm String  @unique @db.VarChar(20)
  nome_adm  String
  //proibe_laboratorio ProibeLaboratorio []
  @@map("administrador")
}

model ProibeLaboratorio {
  //email_adm String  @unique @db.VarChar(20) @default(uuid())
  id Int @unique @default(autoincrement())
  data_inicio DateTime?
  data_fim DateTime?
  //administrador Administrador? @relation(fields: [email_adm], references: [email_adm])
  //falta conexao tblaboratorio
  @@map("proibelaboratorio")
}

// model Turma{
//   id_turma Int @id @default(autoincrement())
//   email_professor String  @db.VarChar(20) @id
//   id_lab Int
//   data_turma DateTime
//   horario_inicio DateTime?  @db.Time(0)
//   horario_fim DateTime?  @db.Time(0)
//   curso_professor String  @db.VarChar(20)
//   Professor professor   @relation(fields: [email_professor], references: [email_professor])
//   lab lab   @relation(fields: [id_lab], references: [id_lab])
//   reservas Reserva[]
//   @@map("turma")
// }
